{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _jsxFileName = \"D:\\\\Final_Project\\\\semicolon_app\\\\navigation\\\\TabNavigation.js\",\n    _this = this;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin: -30px 0;\\n  width: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport Home from \"../screens/Tabs/Home\";\nimport Search from \"../screens/Tabs/Search\";\nimport Notifications from \"../screens/Tabs/Notifications\";\nimport Profile from \"../screens/Tabs/Profile\";\nimport MessageLink from \"../components/MassagesLink\";\nimport NavIcon from \"../components/NavIcon\";\nimport { AntDesign } from '@expo/vector-icons';\nimport constants from \"../constants\";\nimport styled from 'styled-components/native';\nimport styles from \"../styles\";\n\nvar stackFactory = function stackFactory(initialRoute, customConfig) {\n  return createStackNavigator({\n    InitialRoute: {\n      screen: initialRoute,\n      navigationOptions: _objectSpread({}, customConfig)\n    }\n  });\n};\n\nvar Image = styled.Image(_templateObject(), constants.width / 3);\nexport default createBottomTabNavigator({\n  Home: {\n    screen: stackFactory(Home, {\n      headerRight: React.createElement(MessageLink, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }\n      }),\n      headerTitle: React.createElement(Image, {\n        resizeMode: \"contain\",\n        source: require(\"../assets/logo.png\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 22\n        }\n      })\n    }),\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(NavIcon, {\n          focused: focused,\n          name: Platform.OS === \"ios\" ? focused ? \"home-sharp\" : \"home-outline\" : focused ? \"home-sharp\" : \"home-outline\",\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Search: {\n    screen: stackFactory(Search),\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused;\n        return React.createElement(NavIcon, {\n          focused: focused,\n          name: Platform.OS === \"ios\" ? focused ? \"ios-search-sharp\" : \"ios-search-outline\" : focused ? \"md-search-sharp\" : \"md-search-outline\",\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Add: {\n    screen: View,\n    navigationOptions: {\n      tabBarOnPress: function tabBarOnPress(_ref3) {\n        var navigation = _ref3.navigation;\n        return navigation.navigate(\"PhotoNavigation\");\n      },\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused;\n        return React.createElement(NavIcon, {\n          focused: focused,\n          name: Platform.OS === \"ios\" ? \"ios-add\" : \"md-add\",\n          size: 32,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  },\n  Notifications: {\n    screen: stackFactory(Notifications, {\n      title: \"Notifications\"\n    }),\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(AntDesign, {\n          focused: focused,\n          name: Platform.OS === \"ios\" ? focused ? \"star\" : \"staro\" : focused ? \"star\" : \"staro\",\n          size: 26,\n          color: focused ? styles.navyColor : styles.darkGreyColor,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 10\n          }\n        });\n      }\n    }\n  },\n  Profile: {\n    screen: stackFactory(Profile, {\n      title: \"Profile\"\n    }),\n    navigationOptions: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(NavIcon, {\n          focused: focused,\n          name: Platform.OS === \"ios\" ? focused ? \"person\" : \"person-outline\" : focused ? \"person\" : \"person-outline\",\n          size: 26,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        });\n      }\n    }\n  }\n}, {\n  initialRouteName: \"Search\",\n  tabBarOptions: {\n    showLabel: false\n  }\n});","map":{"version":3,"sources":["D:/Final_Project/semicolon_app/navigation/TabNavigation.js"],"names":["React","createStackNavigator","createBottomTabNavigator","Home","Search","Notifications","Profile","MessageLink","NavIcon","AntDesign","constants","styled","styles","stackFactory","initialRoute","customConfig","InitialRoute","screen","navigationOptions","Image","width","headerRight","headerTitle","require","tabBarIcon","focused","Platform","OS","Add","View","tabBarOnPress","navigation","navigate","title","navyColor","darkGreyColor","initialRouteName","tabBarOptions","showLabel"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, Platform } from \"react-native\";\r\nimport { createStackNavigator } from 'react-navigation-stack';\r\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\r\nimport Home from \"../screens/Tabs/Home\";\r\nimport Search from \"../screens/Tabs/Search\";\r\nimport Notifications from \"../screens/Tabs/Notifications\";\r\nimport Profile from \"../screens/Tabs/Profile\";\r\nimport MessageLink from \"../components/MassagesLink\";\r\nimport NavIcon from \"../components/NavIcon\";\r\nimport { AntDesign } from '@expo/vector-icons'; \r\nimport constants from \"../constants\";\r\nimport styled from 'styled-components/native';\r\nimport styles from \"../styles\";\r\n\r\n\r\nconst stackFactory = (initialRoute, customConfig) =>\r\n  createStackNavigator({\r\n    InitialRoute: {\r\n      screen: initialRoute,\r\n      navigationOptions: { ...customConfig }\r\n    }\r\n  });\r\n  const Image = styled.Image`\r\n  margin: -30px 0;\r\n  width: ${constants.width / 3};\r\n`;\r\n\r\nexport default createBottomTabNavigator(\r\n  {\r\n    Home: {\r\n      screen: stackFactory(Home, {\r\n        headerRight: <MessageLink />,\r\n        headerTitle: <Image resizeMode={\"contain\"} source={require(\"../assets/logo.png\")} />\r\n      }),\r\n      navigationOptions: {\r\n        tabBarIcon: ({focused}) => (\r\n          <NavIcon\r\n            focused={focused}\r\n            name={Platform.OS === \"ios\"? focused ? \"home-sharp\" : \"home-outline\" : focused ? \"home-sharp\" : \"home-outline\"} size={26} />\r\n        )\r\n      }\r\n    },\r\n    Search: {\r\n      screen: stackFactory(Search),\r\n      navigationOptions: {\r\n        tabBarIcon: ({focused}) => (\r\n          <NavIcon\r\n            focused={focused} name={Platform.OS === \"ios\" ? focused ? \"ios-search-sharp\" : \"ios-search-outline\" : focused ? \"md-search-sharp\" : \"md-search-outline\"} size={26}  />\r\n        )\r\n      }\r\n    },\r\n    Add: {\r\n      screen: View,\r\n      navigationOptions: {\r\n        tabBarOnPress: ({ navigation }) =>\r\n          navigation.navigate(\"PhotoNavigation\"),\r\n        tabBarIcon: ({focused}) => (\r\n          <NavIcon\r\n            focused={focused} name={Platform.OS === \"ios\" ? \"ios-add\" : \"md-add\"} size={32} />\r\n        )\r\n      }\r\n    },\r\n    Notifications: {\r\n      screen: stackFactory(Notifications, {\r\n        title: \"Notifications\"\r\n      }),\r\n      navigationOptions: {\r\n        tabBarIcon: ({ focused }) => (\r\n         <AntDesign focused={focused} name={Platform.OS === \"ios\" ? focused ? \"star\" : \"staro\" : focused ? \"star\" : \"staro\"} size={26} color={focused ? styles.navyColor : styles.darkGreyColor} />\r\n        )\r\n      }\r\n    },\r\n    Profile: {\r\n      screen: stackFactory(Profile, {\r\n        title: \"Profile\"\r\n      }),\r\n      navigationOptions: {\r\n        tabBarIcon: ({focused}) => (\r\n          <NavIcon\r\n            focused={focused} name={Platform.OS === \"ios\"? focused ? \"person\" : \"person-outline\" : focused ? \"person\" : \"person-outline\"} size={26} />\r\n        )\r\n      }\r\n    }\r\n  },\r\n  {\r\n    initialRouteName: \"Search\",\r\n    tabBarOptions: {\r\n      showLabel: false\r\n    }\r\n  }\r\n);\r\n\r\n"]},"metadata":{},"sourceType":"module"}