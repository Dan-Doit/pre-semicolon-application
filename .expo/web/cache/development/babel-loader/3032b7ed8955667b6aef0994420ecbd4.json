{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zmffh\\\\OneDrive\\\\Desktop\\\\Nomad\\\\semicolon-application\\\\screens\\\\photo\\\\UploadPhoto.js\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  color: white;\\n  font-weight: 600;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  padding: 10px;\\n  border-radius: 4px;\\n  align-items: center;\\n  justify-content: center;\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 10px;\\n  border: 0px solid \", \";\\n  border-bottom-width: 1px;\\n  padding-bottom: 10px;\\n  width: \", \";\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: flex-start;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  padding: 20px;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation upload($caption: String!, $files: [String!]!, $location: String) {\\n    upload(caption: $caption, files: $files, location: $location) {\\n      id\\n      caption\\n      location\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport styled from \"styled-components/native\";\nimport useInput from \"../../hooks/useInput\";\nimport styles from \"../../styles\";\nimport constants from \"../../constants\";\nimport { gql } from \"apollo-boost\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { FEED_QUERY } from \"../tabs/Home\";\nimport { ME } from \"../tabs/Profile\";\nimport { GET_USER } from \"../UserDetail\";\nvar UPLOAD = gql(_templateObject());\nvar View = styled.View(_templateObject2());\nvar Container = styled.View(_templateObject3());\nvar Form = styled.View(_templateObject4());\nvar STextInput = styled.TextInput(_templateObject5(), styles.lightGreyColor, constants.width - 180);\nvar Button = styled.TouchableOpacity(_templateObject6(), function (props) {\n  return props.theme.blueColor;\n});\nvar Text = styled.Text(_templateObject7());\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var photo = navigation.getParam(\"photo\");\n  var captionInput = useInput(\"\");\n  var locationInput = useInput(\"\");\n\n  var _useMutation = useMutation(UPLOAD, {\n    refetchQueries: function refetchQueries() {\n      return [{\n        query: FEED_QUERY\n      }, {\n        query: ME\n      }, {\n        query: GET_USER\n      }];\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      uploadMutation = _useMutation2[0];\n\n  var handleSubmit = function handleSubmit() {\n    var formData, name, _name$split, _name$split2, type, _await$axios$post, location, _await$uploadMutation, upload;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (captionInput.value === \"\" || locationInput.value === \"\") {\n              Alert.alert(\"빈칸을 채워주세요!\", \"빈틈없이!!\");\n            }\n\n            formData = new FormData();\n            name = photo.filename;\n            _name$split = name.split(\".\"), _name$split2 = _slicedToArray(_name$split, 2), type = _name$split2[1];\n            formData.append(\"file\", {\n              name: name,\n              type: type.toLowerCase(),\n              uri: photo.uri\n            });\n            _context.prev = 5;\n            setIsLoading(true);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(axios.post(\"https://jdsemicolon-backend.herokuapp.com/api/upload\", formData, {\n              headers: {\n                \"Content-type\": \"multipart/form-data\"\n              }\n            }));\n\n          case 9:\n            _await$axios$post = _context.sent;\n            location = _await$axios$post.data.location;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(uploadMutation({\n              variables: {\n                files: [location],\n                caption: captionInput.value,\n                loacation: locationInput.value\n              }\n            }));\n\n          case 13:\n            _await$uploadMutation = _context.sent;\n            upload = _await$uploadMutation.data.upload;\n\n            if (upload.id) {\n              navigation.navigate(\"TabNavigation\");\n            }\n\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](5);\n            Alert.alert(\"Cant upload\", \"Try later\");\n\n          case 21:\n            _context.prev = 21;\n            setIsLoading(false);\n            return _context.finish(21);\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 18, 21, 24]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: photo.uri\n    },\n    style: {\n      height: 80,\n      width: 80,\n      marginRight: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), React.createElement(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(STextInput, {\n    onChangeText: captionInput.onChange,\n    value: captionInput.value,\n    placeholder: \"Caption\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), React.createElement(STextInput, {\n    onChangeText: locationInput.onChange,\n    value: locationInput.value,\n    placeholder: \"Location\",\n    multiline: true,\n    placeholderTextColor: styles.darkGreyColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    onPress: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, loading ? React.createElement(ActivityIndicator, {\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }) : React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Upload\")))));\n});","map":{"version":3,"sources":["C:/Users/zmffh/OneDrive/Desktop/Nomad/semicolon-application/screens/photo/UploadPhoto.js"],"names":["React","useState","axios","styled","useInput","styles","constants","gql","useMutation","FEED_QUERY","ME","GET_USER","UPLOAD","View","Container","Form","STextInput","TextInput","lightGreyColor","width","Button","TouchableOpacity","props","theme","blueColor","Text","navigation","loading","setIsLoading","photo","getParam","captionInput","locationInput","refetchQueries","query","uploadMutation","handleSubmit","value","Alert","alert","formData","FormData","name","filename","split","type","append","toLowerCase","uri","post","headers","location","data","variables","files","caption","loacation","upload","id","navigate","height","marginRight","onChange","darkGreyColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Image, ActivityIndicator, Alert } from \"react-native\";\r\nimport styled from \"styled-components/native\";\r\nimport useInput from \"../../hooks/useInput\";\r\nimport styles from \"../../styles\";\r\nimport constants from \"../../constants\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { FEED_QUERY } from \"../tabs/Home\";\r\nimport { ME } from \"../tabs/Profile\";\r\nimport { GET_USER } from \"../UserDetail\";\r\n\r\nconst UPLOAD = gql`\r\n  mutation upload($caption: String!, $files: [String!]!, $location: String) {\r\n    upload(caption: $caption, files: $files, location: $location) {\r\n      id\r\n      caption\r\n      location\r\n    }\r\n  }\r\n`;\r\n\r\nconst View = styled.View`\r\n  flex: 1;\r\n`;\r\n\r\nconst Container = styled.View`\r\n  padding: 20px;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Form = styled.View`\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst STextInput = styled.TextInput`\r\n  margin-bottom: 10px;\r\n  border: 0px solid ${styles.lightGreyColor};\r\n  border-bottom-width: 1px;\r\n  padding-bottom: 10px;\r\n  width: ${constants.width - 180};\r\n`;\r\n\r\nconst Button = styled.TouchableOpacity`\r\n  background-color: ${props => props.theme.blueColor};\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.Text`\r\n  color: white;\r\n  font-weight: 600;\r\n`;\r\n\r\nexport default ({ navigation }) => {\r\n  const [loading, setIsLoading] = useState(false);\r\n  const photo = navigation.getParam(\"photo\");\r\n  const captionInput = useInput(\"\");\r\n  const locationInput = useInput(\"\");\r\n  const [uploadMutation] = useMutation(UPLOAD, {\r\n    refetchQueries: () => [{ query: FEED_QUERY }, { query: ME }, {query:GET_USER}]\r\n  });\r\n  const handleSubmit = async () => {\r\n    if (captionInput.value === \"\" || locationInput.value === \"\") {\r\n      Alert.alert(\"빈칸을 채워주세요!\",\"빈틈없이!!\");\r\n    }\r\n    const formData = new FormData();\r\n    const name = photo.filename;\r\n    const [, type] = name.split(\".\");\r\n    formData.append(\"file\", {\r\n      name,\r\n      type: type.toLowerCase(),\r\n      uri: photo.uri\r\n    });\r\n    try {\r\n      setIsLoading(true);\r\n      const {\r\n        data: { location }\r\n      } = await axios.post(\"https://jdsemicolon-backend.herokuapp.com/api/upload\", formData, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\"\r\n        }\r\n      });\r\n\r\n      const {\r\n        data: { upload }\r\n      } = await uploadMutation({\r\n        variables: {\r\n          files: [location],\r\n          caption: captionInput.value,\r\n          loacation: locationInput.value,\r\n        }\r\n      });\r\n      if (upload.id) {\r\n        navigation.navigate(\"TabNavigation\")\r\n      }\r\n     \r\n    } catch (e) {\r\n      Alert.alert(\"Cant upload\", \"Try later\");\r\n    } finally { \r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <View>\r\n      <Container>\r\n        <Image\r\n          source={{ uri: photo.uri }}\r\n          style={{ height: 80, width: 80, marginRight: 30 }}\r\n        />\r\n        <Form>\r\n          <STextInput\r\n            onChangeText={captionInput.onChange}\r\n            value={captionInput.value}\r\n            placeholder=\"Caption\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <STextInput\r\n            onChangeText={locationInput.onChange}\r\n            value={locationInput.value}\r\n            placeholder=\"Location\"\r\n            multiline={true}\r\n            placeholderTextColor={styles.darkGreyColor}\r\n          />\r\n          <Button onPress={handleSubmit}>\r\n            {loading ? (\r\n              <ActivityIndicator color=\"white\" />\r\n            ) : (\r\n              <Text>Upload</Text>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    </View>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}