{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Final_Project\\\\semicolon_app\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from 'expo-font';\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loaded = _useState2[0],\n      setLoaded = _useState2[1];\n\n  var preLoad = function preLoad() {\n    return _regeneratorRuntime.async(function preLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, AntDesign.font)));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(Asset.loadAsync());\n\n          case 5:\n            setLoaded(true);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    preLoad();\n  }, []);\n  return loaded ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Open up App.js to start working on your app! AntDesign.font\")) : React.createElement(AppLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["D:/Final_Project/semicolon_app/App.js"],"names":["React","useState","useEffect","AntDesign","AppLoading","Font","App","loaded","setLoaded","preLoad","loadAsync","font","Asset","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;;;AAEA,SAASC,SAAT,QAA2B,oBAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACAL,QAAQ,CAAC,KAAD,CADR;AAAA;AAAA,MACrBM,MADqB;AAAA,MACbC,SADa;;AAE5B,MAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAENJ,IAAI,CAACK,SAAL,mBACDP,SAAS,CAACQ,IADT,EAFM;;AAAA;AAAA;AAAA,6CAKNC,KAAK,CAACF,SAAN,EALM;;AAAA;AAMZF,YAAAA,SAAS,CAAC,IAAD,CAAT;AANY;AAAA;;AAAA;AAAA;AAAA;AAQZK,YAAAA,OAAO,CAACC,GAAR;;AARY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAWAZ,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOF,MAAM,GACX,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF,CADW,GAIT,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAMD","sourcesContent":["import React, { useState, useEffect }from 'react';\nimport { Text, View } from 'react-native';\nimport { AntDesign  } from \"@expo/vector-icons\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from 'expo-font';\n\nexport default function App() {\n  const [loaded, setLoaded] = useState(false);\n  const preLoad = async() => {\n    try {\n      await Font.loadAsync({\n        ...AntDesign.font\n      });\n      await Asset.loadAsync();\n      setLoaded(true);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  useEffect(() => {\n    preLoad();\n  }, []);\n  return loaded ? (\n    <View >\n      <Text>Open up App.js to start working on your app! AntDesign.font</Text>\n    </View>) : (\n      <AppLoading/>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}