{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zmffh\\\\OneDrive\\\\Desktop\\\\Nomad\\\\semicolon-application\\\\navigation\\\\EventNavigation\\\\NavigationPresenter.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query covid19($location:String!) {\\n    covid19(location:$location){\\n      countryName\\n      newCase\\n      }\\n    }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query weather($latitude: Float! , $longitude:Float!) {\\n    weather(latitude: $latitude, longitude:$longitude){\\n        temp \\n        weather\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  margin-top : -30px;\\n  margin-bottom : -30px;\\n  width: \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport Weather from \"../../components/Weather\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Covid from \"../../components/Covid\";\nimport constants from \"../../constants\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { gql } from 'apollo-boost';\nvar Image = styled.Image(_templateObject(), constants.width / 3);\nvar View = styled.View(_templateObject2());\nvar GET_WEATHER = gql(_templateObject3());\nvar GET_COVID = gql(_templateObject4());\nexport default (function (_ref) {\n  var location = _ref.location;\n\n  var _useState = useState({\n    currentPage: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      sliderState = _useState2[0],\n      setSliderState = _useState2[1];\n\n  var _constants$width = constants.width,\n      width = _constants$width.width,\n      height = _constants$width.height;\n\n  var setSliderPage = function setSliderPage(event) {\n    var currentPage = sliderState.currentPage;\n    var x = event.nativeEvent.contentOffset.x;\n    var indexOfNextScreen = Math.floor(x / width);\n\n    if (indexOfNextScreen !== currentPage) {\n      setSliderState(_objectSpread(_objectSpread({}, sliderState), {}, {\n        currentPage: indexOfNextScreen\n      }));\n    }\n  };\n\n  var pageIndex = sliderState.currentPage;\n\n  var _useQuery = useQuery(GET_WEATHER, {\n    variables: {\n      latitude: location.latitude,\n      longitude: location.longitude\n    }\n  }),\n      weatherData = _useQuery.data,\n      weatherLoding = _useQuery.loading;\n\n  var _useQuery2 = useQuery(GET_COVID, {\n    variables: {\n      location: location.region\n    }\n  }),\n      covidData = _useQuery2.data,\n      covidLoading = _useQuery2.loading;\n\n  return covidData && weatherLoding ? React.createElement(Image, {\n    resizeMode: \"contain\",\n    source: require(\"../../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }) : React.createElement(React.Fragment, null, React.createElement(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      flex: 1\n    },\n    horizontal: true,\n    scrollEventThrottle: 16,\n    pagingEnabled: true,\n    showsHorizontalScrollIndicator: false,\n    onScroll: function onScroll(event) {\n      setSliderPage(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width,\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    style: styles.imageStyle,\n    source: require(\"../../assets/logo.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      width: width,\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Covid, {\n    countryName: covidData.covid19.countryName,\n    newCase: covidData.covid19.newCase,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      width: width,\n      height: height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(Weather, {\n    weather: weatherData.weather.weather,\n    temp: weatherData.weather.temp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }\n  }), React.createElement(View, {\n    style: styles.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.paginationWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, Array.from(Array(5).keys()).map(function (key, index) {\n    return React.createElement(View, {\n      style: [styles.paginationDots, {\n        opacity: pageIndex === index ? 1 : 0.2\n      }],\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    });\n  }))));\n});\nvar styles = StyleSheet.create({\n  imageStyle: {\n    height: \"10%\",\n    width: '80%'\n  },\n  wrapper: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 30\n  },\n  paginationWrapper: {\n    position: 'absolute',\n    bottom: 200,\n    left: 0,\n    right: 0,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  paginationDots: {\n    height: 10,\n    width: 10,\n    borderRadius: 10 / 2,\n    backgroundColor: '#0898A0',\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/zmffh/OneDrive/Desktop/Nomad/semicolon-application/navigation/EventNavigation/NavigationPresenter.js"],"names":["React","useState","useEffect","styled","Weather","Covid","constants","useQuery","gql","Image","width","View","GET_WEATHER","GET_COVID","location","currentPage","sliderState","setSliderState","height","setSliderPage","event","x","nativeEvent","contentOffset","indexOfNextScreen","Math","floor","pageIndex","variables","latitude","longitude","weatherData","data","weatherLoding","loading","region","covidData","covidLoading","require","flex","styles","imageStyle","wrapper","covid19","countryName","newCase","weather","temp","paginationWrapper","Array","from","keys","map","key","index","paginationDots","opacity","StyleSheet","create","justifyContent","alignItems","marginVertical","position","bottom","left","right","flexDirection","borderRadius","backgroundColor","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport Weather from \"../../components/Weather\"; \r\nimport { StyleSheet, ScrollView, SafeAreaView } from \"react-native\";\r\nimport Covid from \"../../components/Covid\";\r\nimport constants from \"../../constants\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst Image = styled.Image`\r\n  margin-top : -30px;\r\n  margin-bottom : -30px;\r\n  width: ${constants.width / 3};\r\n`;\r\n\r\nconst View = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst GET_WEATHER = gql`\r\n  query weather($latitude: Float! , $longitude:Float!) {\r\n    weather(latitude: $latitude, longitude:$longitude){\r\n        temp \r\n        weather\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_COVID = gql`\r\n  query covid19($location:String!) {\r\n    covid19(location:$location){\r\n      countryName\r\n      newCase\r\n      }\r\n    }\r\n`;\r\n\r\n\r\n\r\nexport default ({ location }) => {\r\n\r\nconst [sliderState, setSliderState] = useState({ currentPage: 0 });\r\nconst { width, height } = constants.width;\r\n\r\n  const setSliderPage = (event) => {\r\n    const { currentPage } = sliderState;\r\n    const { x } = event.nativeEvent.contentOffset;\r\n    const indexOfNextScreen = Math.floor(x / width);\r\n    if (indexOfNextScreen !== currentPage) {\r\n      setSliderState({\r\n        ...sliderState,\r\n        currentPage: indexOfNextScreen,\r\n      });\r\n    }\r\n  };\r\n\r\n  const { currentPage: pageIndex } = sliderState;\r\n\r\n  const { data: weatherData, loading: weatherLoding } = useQuery(GET_WEATHER, {\r\n    variables: {\r\n      latitude: location.latitude,\r\n      longitude: location.longitude\r\n    }\r\n  });\r\n  const { data: covidData, loading: covidLoading } = useQuery(GET_COVID, {\r\n    variables: {\r\n      location: location.region\r\n    }\r\n  });\r\n\r\n  return (covidData && weatherLoding ? (<Image resizeMode={\"contain\"} source={require(\"../../assets/logo.png\")} />)\r\n    : (\r\n    <>\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        <ScrollView\r\n          style={{ flex: 1 }}\r\n          horizontal={true}\r\n          scrollEventThrottle={16}\r\n          pagingEnabled={true}\r\n          showsHorizontalScrollIndicator={false}\r\n          onScroll={(event) => {\r\n            setSliderPage(event);\r\n          }}\r\n        >\r\n          <View style={{ width, height }}>\r\n            <Image style={styles.imageStyle} source={require(\"../../assets/logo.png\")} />\r\n            <View style={styles.wrapper}>\r\n            </View>\r\n          </View>\r\n          <View style={{ width, height }}>\r\n            <Covid countryName={covidData.covid19.countryName} newCase={covidData.covid19.newCase} />\r\n            <View style={styles.wrapper}>\r\n            </View>\r\n          </View>\r\n          <View style={{ width, height }}>\r\n           <Weather weather={weatherData.weather.weather} temp={weatherData.weather.temp} />\r\n            <View style={styles.wrapper}>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n        <View style={styles.paginationWrapper}>\r\n          {Array.from(Array(5).keys()).map((key, index) => (\r\n            <View style={[styles.paginationDots, { opacity: pageIndex === index ? 1 : 0.2 }]} key={index} />\r\n          ))}\r\n        </View>\r\n      </SafeAreaView>\r\n    </>\r\n  )\r\n  \r\n  )\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  imageStyle: {\r\n    height: \"10%\",\r\n    width: '80%',\r\n  },\r\n  wrapper: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginVertical: 30,\r\n  },\r\n  paginationWrapper: {\r\n    position: 'absolute',\r\n    bottom: 200,\r\n    left: 0,\r\n    right: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  paginationDots: {\r\n    height: 10,\r\n    width: 10,\r\n    borderRadius: 10 / 2,\r\n    backgroundColor: '#0898A0',\r\n    marginLeft: 10,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}