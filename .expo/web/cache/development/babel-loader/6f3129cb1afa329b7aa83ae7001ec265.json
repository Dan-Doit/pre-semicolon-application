{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\zmffh\\\\OneDrive\\\\Desktop\\\\Nomad\\\\semicolon-application\\\\screens\\\\tabs\\\\Notifications.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  justify-content: center;\\n  align-items: center;\\n  flex: 1;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/native\";\nimport Weather from \"../../components/Weather\";\nimport Loader from \"../../components/Loader\";\nimport * as Location from 'expo-location';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Covid from \"../../components/Covid\";\nvar View = styled.View(_templateObject());\nvar Text = styled.Text(_templateObject2());\nexport default (function () {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, _await$Location$getCu, _await$Location$getCu2, latitude, longitude, _await$Location$rever, _await$Location$rever2, region;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Woops!\", \"위치정보를 찾을수 없어요!\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.prev = 7;\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 10:\n              _await$Location$getCu = _context.sent;\n              _await$Location$getCu2 = _await$Location$getCu.coords;\n              latitude = _await$Location$getCu2.latitude;\n              longitude = _await$Location$getCu2.longitude;\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n                latitude: latitude,\n                longitude: longitude\n              }));\n\n            case 16:\n              _await$Location$rever = _context.sent;\n              _await$Location$rever2 = _slicedToArray(_await$Location$rever, 1);\n              region = _await$Location$rever2[0].region;\n              setLocation({\n                latitude: latitude,\n                longitude: longitude,\n                region: region.toLowerCase()\n              });\n              setLoading(false);\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](7);\n              Alert.alert(\"위치를 찾을수없어요\", \"다시 시도해 주세요 ㅠㅠ\");\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[7, 23]], Promise);\n    })();\n  }, []);\n  return loading ? React.createElement(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }\n  }) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 31\n    }\n  }, React.createElement(Weather, {\n    latitude: location.latitude,\n    longitude: location.longitude,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }\n  }), React.createElement(Covid, {\n    location: location.region,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 108\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/zmffh/OneDrive/Desktop/Nomad/semicolon-application/screens/tabs/Notifications.js"],"names":["React","useState","useEffect","styled","Weather","Loader","Location","Covid","View","Text","loading","setLoading","location","setLocation","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","coords","latitude","longitude","reverseGeocodeAsync","region","toLowerCase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,OAAOC,KAAP;AAGA,IAAMC,IAAI,GAAGL,MAAM,CAACK,IAAV,mBAAV;AAMA,IAAMC,IAAI,GAAGN,MAAM,CAACM,IAAV,oBAAV;AAGA,gBAAe,YAAM;AAAA,kBACWR,QAAQ,CAAC,IAAD,CADnB;AAAA;AAAA,MACZS,OADY;AAAA,MACHC,UADG;;AAAA,mBAEaV,QAAQ,CAAC,IAAD,CAFrB;AAAA;AAAA,MAEZW,QAFY;AAAA,MAEFC,WAFE;;AAInBX,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBI,QAAQ,CAACQ,uBAAT,EADxB;;AAAA;AAAA;AACOC,cAAAA,MADP,yBACOA,MADP;;AAAA,oBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAGGC,cAAAA,KAAK,CAACC,KAAN,CAAY,QAAZ,EAAqB,gBAArB;AAHH;;AAAA;AAAA;AAAA;AAAA,+CAQqDX,QAAQ,CAACY,uBAAT,EARrD;;AAAA;AAAA;AAAA,6DAQWC,MARX;AAQqBC,cAAAA,QARrB,0BAQqBA,QARrB;AAQ+BC,cAAAA,SAR/B,0BAQ+BA,SAR/B;AAAA;AAAA,+CAS+Bf,QAAQ,CAACgB,mBAAT,CAA6B;AAACF,gBAAAA,QAAQ,EAARA,QAAD;AAAUC,gBAAAA,SAAS,EAATA;AAAV,eAA7B,CAT/B;;AAAA;AAAA;AAAA;AASYE,cAAAA,MATZ,6BASYA,MATZ;AAWGV,cAAAA,WAAW,CAAC;AAAEO,gBAAAA,QAAQ,EAARA,QAAF;AAAYC,gBAAAA,SAAS,EAATA,SAAZ;AAAuBE,gBAAAA,MAAM,EAACA,MAAM,CAACC,WAAP;AAA9B,eAAD,CAAX;AACAb,cAAAA,UAAU,CAAC,KAAD,CAAV;AAZH;AAAA;;AAAA;AAAA;AAAA;AAcGK,cAAAA,KAAK,CAACC,KAAN,CAAY,YAAZ,EAAyB,eAAzB;;AAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAkBD,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,SACEP,OAAO,GAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAJ,GAAmB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEE,QAAQ,CAACQ,QAA5B;AAAsC,IAAA,SAAS,EAAER,QAAQ,CAACS,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAN,EAA6E,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAET,QAAQ,CAACW,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7E,CAD5B;AAEE,CA3BJ","sourcesContent":["import React, { useState , useEffect } from \"react\";\r\nimport styled from \"styled-components/native\";\r\nimport Weather from \"../../components/Weather\"; \r\nimport Loader from \"../../components/Loader\";\r\nimport * as Location from 'expo-location';\r\nimport {Alert} from 'react-native';\r\nimport Covid from \"../../components/Covid\";\r\n\r\n\r\nconst View = styled.View`\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst Text = styled.Text``;\r\n\r\n\r\nexport default () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [location, setLocation] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    (async () => {\r\n      let { status } = await Location.requestPermissionsAsync();\r\n      if (status !== 'granted') {\r\n        Alert.alert(\"Woops!\",\"위치정보를 찾을수 없어요!\")\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { coords: { latitude, longitude } } = await Location.getCurrentPositionAsync();\r\n        const [{ region }]  = await Location.reverseGeocodeAsync({latitude,longitude});\r\n        \r\n        setLocation({ latitude, longitude, region:region.toLowerCase() });\r\n        setLoading(false);\r\n       } catch { \r\n        Alert.alert(\"위치를 찾을수없어요\",\"다시 시도해 주세요 ㅠㅠ\")\r\n      }\r\n\r\n    })();\r\n  }, []);\r\n  \r\n  return (\r\n    loading ? (<Loader />) : (<View><Weather latitude={location.latitude} longitude={location.longitude} /><Covid location={location.region} /></View>)\r\n  )};"]},"metadata":{},"sourceType":"module"}